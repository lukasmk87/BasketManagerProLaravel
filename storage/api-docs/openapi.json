{
    "openapi": "3.0.0",
    "info": {
        "title": "BasketManager Pro API",
        "description": "Enterprise Basketball Club Management API with multi-tenant architecture, real-time scoring, and comprehensive statistics.",
        "version": "4.0",
        "termsOfService": "https://staging.basketmanager-pro.de//terms",
        "contact": {
            "name": "BasketManager Pro Support",
            "url": "https://staging.basketmanager-pro.de//support",
            "email": "support@basketmanager-pro.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "https://staging.basketmanager-pro.de//api",
            "description": "Production API"
        },
        {
            "url": "https://staging-api.basketmanager-pro.com/api",
            "description": "Staging API"
        },
        {
            "url": "http://localhost:8000/api",
            "description": "Development API"
        }
    ],
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "summary": "Login auth",
                "description": "Perform login operation on auth",
                "operationId": "postauth_login",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "summary": "Register auth",
                "description": "Perform register operation on auth",
                "operationId": "postauth_register",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "summary": "Logout auth",
                "description": "Perform logout operation on auth",
                "operationId": "postauth_logout",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "summary": "Refresh auth",
                "description": "Perform refresh operation on auth",
                "operationId": "postauth_refresh",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/user": {
            "get": {
                "summary": "User auth",
                "description": "Perform user operation on auth",
                "operationId": "getauth_user",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "User auth",
                "description": "Perform user operation on auth",
                "operationId": "headauth_user",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/teams": {
            "get": {
                "summary": "List all team",
                "description": "Retrieve a paginated list of team with filtering and sorting options.",
                "operationId": "getteam_index",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Team"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all team",
                "description": "Retrieve a paginated list of team with filtering and sorting options.",
                "operationId": "headteam_index",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Team"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new team",
                "description": "Create a new team with validation and automatic relationship setup.",
                "operationId": "postteam_store",
                "tags": [
                    "Teams"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/teams/{team}": {
            "get": {
                "summary": "Get specific team",
                "description": "Get detailed information about a specific team including related data.",
                "operationId": "getteam_show",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific team",
                "description": "Get detailed information about a specific team including related data.",
                "operationId": "headteam_show",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update team",
                "description": "Update an existing team with partial or complete data replacement.",
                "operationId": "putteam_update",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update team",
                "description": "Update an existing team with partial or complete data replacement.",
                "operationId": "patchteam_update",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/teams/{team}/players": {
            "get": {
                "summary": "Players team",
                "description": "Perform players operation on team",
                "operationId": "getteam_players",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Players team",
                "description": "Perform players operation on team",
                "operationId": "headteam_players",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/teams/{team}/games": {
            "get": {
                "summary": "Games team",
                "description": "Perform games operation on team",
                "operationId": "getteam_games",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Games team",
                "description": "Perform games operation on team",
                "operationId": "headteam_games",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/players": {
            "get": {
                "summary": "List all player",
                "description": "Retrieve a paginated list of player with filtering and sorting options.",
                "operationId": "getplayer_index",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Player"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all player",
                "description": "Retrieve a paginated list of player with filtering and sorting options.",
                "operationId": "headplayer_index",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Player"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new player",
                "description": "Create a new player with validation and automatic relationship setup.",
                "operationId": "postplayer_store",
                "tags": [
                    "Players"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Player"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlayerRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/players/{player}": {
            "get": {
                "summary": "Get specific player",
                "description": "Get detailed information about a specific player including related data.",
                "operationId": "getplayer_show",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Player"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific player",
                "description": "Get detailed information about a specific player including related data.",
                "operationId": "headplayer_show",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Player"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update player",
                "description": "Update an existing player with partial or complete data replacement.",
                "operationId": "putplayer_update",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Player"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlayerRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update player",
                "description": "Update an existing player with partial or complete data replacement.",
                "operationId": "patchplayer_update",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Player"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlayerRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/players/{player}/games": {
            "get": {
                "summary": "Games player",
                "description": "Perform games operation on player",
                "operationId": "getplayer_games",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Games player",
                "description": "Perform games operation on player",
                "operationId": "headplayer_games",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/games": {
            "get": {
                "summary": "List all game",
                "description": "Retrieve a paginated list of game with filtering and sorting options.",
                "operationId": "getgame_index",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Game"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all game",
                "description": "Retrieve a paginated list of game with filtering and sorting options.",
                "operationId": "headgame_index",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Game"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new game",
                "description": "Create a new game with validation and automatic relationship setup.",
                "operationId": "postgame_store",
                "tags": [
                    "Games"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/games/{game}": {
            "get": {
                "summary": "Get specific game",
                "description": "Get detailed information about a specific game including related data.",
                "operationId": "getgame_show",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific game",
                "description": "Get detailed information about a specific game including related data.",
                "operationId": "headgame_show",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update game",
                "description": "Update an existing game with partial or complete data replacement.",
                "operationId": "putgame_update",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update game",
                "description": "Update an existing game with partial or complete data replacement.",
                "operationId": "patchgame_update",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/games/{game}/live-score": {
            "get": {
                "summary": "LiveScore game",
                "description": "Perform liveScore operation on game",
                "operationId": "getgame_liveScore",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "LiveScore game",
                "description": "Perform liveScore operation on game",
                "operationId": "headgame_liveScore",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/games/{game}/start": {
            "post": {
                "summary": "StartGame livescoring",
                "description": "Perform startGame operation on livescoring",
                "operationId": "postlive_scoring_startGame",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/games/{game}/finish": {
            "post": {
                "summary": "FinishGame livescoring",
                "description": "Perform finishGame operation on livescoring",
                "operationId": "postlive_scoring_finishGame",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/games/{game}/actions": {
            "post": {
                "summary": "AddAction livescoring",
                "description": "Perform addAction operation on livescoring",
                "operationId": "postlive_scoring_addAction",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/games/{game}/score": {
            "put": {
                "summary": "UpdateScore livescoring",
                "description": "Perform updateScore operation on livescoring",
                "operationId": "putlive_scoring_updateScore",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/games/{game}/statistics": {
            "get": {
                "summary": "GetGameStatistics livescoring",
                "description": "Perform getGameStatistics operation on livescoring",
                "operationId": "getlive_scoring_getGameStatistics",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "GetGameStatistics livescoring",
                "description": "Perform getGameStatistics operation on livescoring",
                "operationId": "headlive_scoring_getGameStatistics",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/public/games/{game}": {
            "get": {
                "summary": "Get specific game",
                "description": "Get detailed information about a specific game including related data.",
                "operationId": "getgame_show",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "Get specific game",
                "description": "Get detailed information about a specific game including related data.",
                "operationId": "headgame_show",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v1/public/games/{game}/live-score": {
            "get": {
                "summary": "LiveScore game",
                "description": "Perform liveScore operation on game",
                "operationId": "getgame_liveScore",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "LiveScore game",
                "description": "Perform liveScore operation on game",
                "operationId": "headgame_liveScore",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v1/public/teams/{team}": {
            "get": {
                "summary": "Get specific team",
                "description": "Get detailed information about a specific team including related data.",
                "operationId": "getteam_show",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "Get specific team",
                "description": "Get detailed information about a specific team including related data.",
                "operationId": "headteam_show",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v1/public/teams/{team}/players": {
            "get": {
                "summary": "Players team",
                "description": "Perform players operation on team",
                "operationId": "getteam_players",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "Players team",
                "description": "Perform players operation on team",
                "operationId": "headteam_players",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/auth/login": {
            "post": {
                "summary": "Login auth",
                "description": "Perform login operation on auth",
                "operationId": "postauth_login",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/auth/register": {
            "post": {
                "summary": "Register auth",
                "description": "Perform register operation on auth",
                "operationId": "postauth_register",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/auth/logout": {
            "post": {
                "summary": "Logout auth",
                "description": "Perform logout operation on auth",
                "operationId": "postauth_logout",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/auth/refresh": {
            "post": {
                "summary": "Refresh auth",
                "description": "Perform refresh operation on auth",
                "operationId": "postauth_refresh",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/auth/user": {
            "get": {
                "summary": "User auth",
                "description": "Perform user operation on auth",
                "operationId": "getauth_user",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "User auth",
                "description": "Perform user operation on auth",
                "operationId": "headauth_user",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/auth/forgot-password": {
            "post": {
                "summary": "ForgotPassword auth",
                "description": "Perform forgotPassword operation on auth",
                "operationId": "postauth_forgotPassword",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/auth/reset-password": {
            "post": {
                "summary": "ResetPassword auth",
                "description": "Perform resetPassword operation on auth",
                "operationId": "postauth_resetPassword",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/auth/verify-email": {
            "post": {
                "summary": "VerifyEmail auth",
                "description": "Perform verifyEmail operation on auth",
                "operationId": "postauth_verifyEmail",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/auth/resend-verification": {
            "post": {
                "summary": "ResendVerification auth",
                "description": "Perform resendVerification operation on auth",
                "operationId": "postauth_resendVerification",
                "tags": [
                    "Authentication"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Auth"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/teams": {
            "get": {
                "summary": "List all team",
                "description": "Retrieve a paginated list of team with filtering and sorting options.",
                "operationId": "getteam_index",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Team"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all team",
                "description": "Retrieve a paginated list of team with filtering and sorting options.",
                "operationId": "headteam_index",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Team"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new team",
                "description": "Create a new team with validation and automatic relationship setup.",
                "operationId": "postteam_store",
                "tags": [
                    "Teams"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/teams/{team}": {
            "get": {
                "summary": "Get specific team",
                "description": "Get detailed information about a specific team including related data.",
                "operationId": "getteam_show",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific team",
                "description": "Get detailed information about a specific team including related data.",
                "operationId": "headteam_show",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update team",
                "description": "Update an existing team with partial or complete data replacement.",
                "operationId": "putteam_update",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update team",
                "description": "Update an existing team with partial or complete data replacement.",
                "operationId": "patchteam_update",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete team",
                "description": "Permanently delete a team and handle cascading relationships.",
                "operationId": "deleteteam_destroy",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "204": {
                        "description": "Resource deleted successfully"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/teams/{team}/players": {
            "get": {
                "summary": "Players team",
                "description": "Perform players operation on team",
                "operationId": "getteam_players",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Players team",
                "description": "Perform players operation on team",
                "operationId": "headteam_players",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/teams/{team}/games": {
            "get": {
                "summary": "Games team",
                "description": "Perform games operation on team",
                "operationId": "getteam_games",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Games team",
                "description": "Perform games operation on team",
                "operationId": "headteam_games",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/teams/{team}/statistics": {
            "get": {
                "summary": "Statistics team",
                "description": "Perform statistics operation on team",
                "operationId": "getteam_statistics",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Statistics team",
                "description": "Perform statistics operation on team",
                "operationId": "headteam_statistics",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/teams/{team}/analytics": {
            "get": {
                "summary": "Analytics team",
                "description": "Perform analytics operation on team",
                "operationId": "getteam_analytics",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Analytics team",
                "description": "Perform analytics operation on team",
                "operationId": "headteam_analytics",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/teams/{team}/invite-player": {
            "post": {
                "summary": "InvitePlayer team",
                "description": "Perform invitePlayer operation on team",
                "operationId": "postteam_invitePlayer",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/teams/{team}/performance-trends": {
            "get": {
                "summary": "PerformanceTrends team",
                "description": "Perform performanceTrends operation on team",
                "operationId": "getteam_performanceTrends",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "PerformanceTrends team",
                "description": "Perform performanceTrends operation on team",
                "operationId": "headteam_performanceTrends",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/players": {
            "get": {
                "summary": "List all player",
                "description": "Retrieve a paginated list of player with filtering and sorting options.",
                "operationId": "getplayer_index",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Player"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all player",
                "description": "Retrieve a paginated list of player with filtering and sorting options.",
                "operationId": "headplayer_index",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Player"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new player",
                "description": "Create a new player with validation and automatic relationship setup.",
                "operationId": "postplayer_store",
                "tags": [
                    "Players"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Player"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlayerRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/players/{player}": {
            "get": {
                "summary": "Get specific player",
                "description": "Get detailed information about a specific player including related data.",
                "operationId": "getplayer_show",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Player"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific player",
                "description": "Get detailed information about a specific player including related data.",
                "operationId": "headplayer_show",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Player"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update player",
                "description": "Update an existing player with partial or complete data replacement.",
                "operationId": "putplayer_update",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Player"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlayerRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update player",
                "description": "Update an existing player with partial or complete data replacement.",
                "operationId": "patchplayer_update",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Player"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlayerRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete player",
                "description": "Permanently delete a player and handle cascading relationships.",
                "operationId": "deleteplayer_destroy",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "204": {
                        "description": "Resource deleted successfully"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/players/{player}/statistics": {
            "get": {
                "summary": "Statistics player",
                "description": "Perform statistics operation on player",
                "operationId": "getplayer_statistics",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Statistics player",
                "description": "Perform statistics operation on player",
                "operationId": "headplayer_statistics",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/players/{player}/games": {
            "get": {
                "summary": "Games player",
                "description": "Perform games operation on player",
                "operationId": "getplayer_games",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Games player",
                "description": "Perform games operation on player",
                "operationId": "headplayer_games",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/players/{player}/transfer": {
            "post": {
                "summary": "Transfer player",
                "description": "Perform transfer operation on player",
                "operationId": "postplayer_transfer",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/players/{player}/analytics": {
            "get": {
                "summary": "Analytics player",
                "description": "Perform analytics operation on player",
                "operationId": "getplayer_analytics",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Analytics player",
                "description": "Perform analytics operation on player",
                "operationId": "headplayer_analytics",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/players/{player}/injury-risk": {
            "get": {
                "summary": "InjuryRisk player",
                "description": "Perform injuryRisk operation on player",
                "operationId": "getplayer_injuryRisk",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "InjuryRisk player",
                "description": "Perform injuryRisk operation on player",
                "operationId": "headplayer_injuryRisk",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/players/{player}/performance-predictions": {
            "get": {
                "summary": "PerformancePredictions player",
                "description": "Perform performancePredictions operation on player",
                "operationId": "getplayer_performancePredictions",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "PerformancePredictions player",
                "description": "Perform performancePredictions operation on player",
                "operationId": "headplayer_performancePredictions",
                "tags": [
                    "Players"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games": {
            "get": {
                "summary": "List all game",
                "description": "Retrieve a paginated list of game with filtering and sorting options.",
                "operationId": "getgame_index",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Game"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all game",
                "description": "Retrieve a paginated list of game with filtering and sorting options.",
                "operationId": "headgame_index",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Game"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new game",
                "description": "Create a new game with validation and automatic relationship setup.",
                "operationId": "postgame_store",
                "tags": [
                    "Games"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}": {
            "get": {
                "summary": "Get specific game",
                "description": "Get detailed information about a specific game including related data.",
                "operationId": "getgame_show",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific game",
                "description": "Get detailed information about a specific game including related data.",
                "operationId": "headgame_show",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update game",
                "description": "Update an existing game with partial or complete data replacement.",
                "operationId": "putgame_update",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update game",
                "description": "Update an existing game with partial or complete data replacement.",
                "operationId": "patchgame_update",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete game",
                "description": "Permanently delete a game and handle cascading relationships.",
                "operationId": "deletegame_destroy",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "204": {
                        "description": "Resource deleted successfully"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/statistics": {
            "get": {
                "summary": "GetGameStatistics livescoring",
                "description": "Perform getGameStatistics operation on livescoring",
                "operationId": "getlive_scoring_getGameStatistics",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "GetGameStatistics livescoring",
                "description": "Perform getGameStatistics operation on livescoring",
                "operationId": "headlive_scoring_getGameStatistics",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/start": {
            "post": {
                "summary": "StartGame livescoring",
                "description": "Perform startGame operation on livescoring",
                "operationId": "postlive_scoring_startGame",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/finish": {
            "post": {
                "summary": "FinishGame livescoring",
                "description": "Perform finishGame operation on livescoring",
                "operationId": "postlive_scoring_finishGame",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/live-score": {
            "get": {
                "summary": "LiveScore game",
                "description": "Perform liveScore operation on game",
                "operationId": "getgame_liveScore",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "LiveScore game",
                "description": "Perform liveScore operation on game",
                "operationId": "headgame_liveScore",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/real-time-data": {
            "get": {
                "summary": "RealTimeData game",
                "description": "Perform realTimeData operation on game",
                "operationId": "getgame_realTimeData",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "RealTimeData game",
                "description": "Perform realTimeData operation on game",
                "operationId": "headgame_realTimeData",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/broadcast": {
            "post": {
                "summary": "StartBroadcast game",
                "description": "Perform startBroadcast operation on game",
                "operationId": "postgame_startBroadcast",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/game-statistics": {
            "get": {
                "summary": "List all gamestatistic",
                "description": "Retrieve a paginated list of gamestatistic with filtering and sorting options.",
                "operationId": "getgame_statistic_index",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Gamestatistic"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all gamestatistic",
                "description": "Retrieve a paginated list of gamestatistic with filtering and sorting options.",
                "operationId": "headgame_statistic_index",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Gamestatistic"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new gamestatistic",
                "description": "Create a new gamestatistic with validation and automatic relationship setup.",
                "operationId": "postgame_statistic_store",
                "tags": [
                    "Games"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Gamestatistic"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GamestatisticRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/game-statistics/{game_statistic}": {
            "get": {
                "summary": "Get specific gamestatistic",
                "description": "Get detailed information about a specific gamestatistic including related data.",
                "operationId": "getgame_statistic_show",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game_statistic",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game_statistic",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Gamestatistic"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific gamestatistic",
                "description": "Get detailed information about a specific gamestatistic including related data.",
                "operationId": "headgame_statistic_show",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game_statistic",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game_statistic",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Gamestatistic"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update gamestatistic",
                "description": "Update an existing gamestatistic with partial or complete data replacement.",
                "operationId": "putgame_statistic_update",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game_statistic",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game_statistic",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Gamestatistic"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GamestatisticRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update gamestatistic",
                "description": "Update an existing gamestatistic with partial or complete data replacement.",
                "operationId": "patchgame_statistic_update",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game_statistic",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game_statistic",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Gamestatistic"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GamestatisticRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete gamestatistic",
                "description": "Permanently delete a gamestatistic and handle cascading relationships.",
                "operationId": "deletegame_statistic_destroy",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game_statistic",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game_statistic",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "204": {
                        "description": "Resource deleted successfully"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/game-statistics/bulk": {
            "post": {
                "summary": "BulkStore gamestatistic",
                "description": "Perform bulkStore operation on gamestatistic",
                "operationId": "postgame_statistic_bulkStore",
                "tags": [
                    "Games"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gamestatistic"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/game-statistics/{game}/player/{player}": {
            "get": {
                "summary": "PlayerGameStats gamestatistic",
                "description": "Perform playerGameStats operation on gamestatistic",
                "operationId": "getgame_statistic_playerGameStats",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gamestatistic"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "PlayerGameStats gamestatistic",
                "description": "Perform playerGameStats operation on gamestatistic",
                "operationId": "headgame_statistic_playerGameStats",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gamestatistic"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/game-statistics/{game}/advanced-metrics": {
            "get": {
                "summary": "AdvancedMetrics gamestatistic",
                "description": "Perform advancedMetrics operation on gamestatistic",
                "operationId": "getgame_statistic_advancedMetrics",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gamestatistic"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "AdvancedMetrics gamestatistic",
                "description": "Perform advancedMetrics operation on gamestatistic",
                "operationId": "headgame_statistic_advancedMetrics",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gamestatistic"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/trainings": {
            "get": {
                "summary": "List all training",
                "description": "Retrieve a paginated list of training with filtering and sorting options.",
                "operationId": "gettraining_index",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Training"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all training",
                "description": "Retrieve a paginated list of training with filtering and sorting options.",
                "operationId": "headtraining_index",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Training"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new training",
                "description": "Create a new training with validation and automatic relationship setup.",
                "operationId": "posttraining_store",
                "tags": [
                    "Training"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Training"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrainingRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/trainings/{training}": {
            "get": {
                "summary": "Get specific training",
                "description": "Get detailed information about a specific training including related data.",
                "operationId": "gettraining_show",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "training",
                        "in": "path",
                        "required": true,
                        "description": "ID of the training",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Training"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific training",
                "description": "Get detailed information about a specific training including related data.",
                "operationId": "headtraining_show",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "training",
                        "in": "path",
                        "required": true,
                        "description": "ID of the training",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Training"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update training",
                "description": "Update an existing training with partial or complete data replacement.",
                "operationId": "puttraining_update",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "training",
                        "in": "path",
                        "required": true,
                        "description": "ID of the training",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Training"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrainingRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update training",
                "description": "Update an existing training with partial or complete data replacement.",
                "operationId": "patchtraining_update",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "training",
                        "in": "path",
                        "required": true,
                        "description": "ID of the training",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Training"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrainingRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete training",
                "description": "Permanently delete a training and handle cascading relationships.",
                "operationId": "deletetraining_destroy",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "training",
                        "in": "path",
                        "required": true,
                        "description": "ID of the training",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "204": {
                        "description": "Resource deleted successfully"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/trainings/{training}/drills": {
            "get": {
                "summary": "Drills training",
                "description": "Perform drills operation on training",
                "operationId": "gettraining_drills",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "training",
                        "in": "path",
                        "required": true,
                        "description": "ID of the training",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Drills training",
                "description": "Perform drills operation on training",
                "operationId": "headtraining_drills",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "training",
                        "in": "path",
                        "required": true,
                        "description": "ID of the training",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/trainings/{training}/drills/{drill}/attach": {
            "post": {
                "summary": "AttachDrill training",
                "description": "Perform attachDrill operation on training",
                "operationId": "posttraining_attachDrill",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "training",
                        "in": "path",
                        "required": true,
                        "description": "ID of the training",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "drill",
                        "in": "path",
                        "required": true,
                        "description": "ID of the drill",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/trainings/{training}/drills/{drill}/detach": {
            "delete": {
                "summary": "DetachDrill training",
                "description": "Perform detachDrill operation on training",
                "operationId": "deletetraining_detachDrill",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "training",
                        "in": "path",
                        "required": true,
                        "description": "ID of the training",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "drill",
                        "in": "path",
                        "required": true,
                        "description": "ID of the drill",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/teams/{team}/trainings": {
            "get": {
                "summary": "TeamTrainings training",
                "description": "Perform teamTrainings operation on training",
                "operationId": "gettraining_teamTrainings",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "TeamTrainings training",
                "description": "Perform teamTrainings operation on training",
                "operationId": "headtraining_teamTrainings",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/trainings/{training}/duplicate": {
            "post": {
                "summary": "Duplicate training",
                "description": "Perform duplicate operation on training",
                "operationId": "posttraining_duplicate",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "training",
                        "in": "path",
                        "required": true,
                        "description": "ID of the training",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/trainings/{training}/ai-recommendations": {
            "post": {
                "summary": "AiRecommendations training",
                "description": "Perform aiRecommendations operation on training",
                "operationId": "posttraining_aiRecommendations",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "training",
                        "in": "path",
                        "required": true,
                        "description": "ID of the training",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/drills": {
            "get": {
                "summary": "List all drill",
                "description": "Retrieve a paginated list of drill with filtering and sorting options.",
                "operationId": "getdrill_index",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Drill"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all drill",
                "description": "Retrieve a paginated list of drill with filtering and sorting options.",
                "operationId": "headdrill_index",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Drill"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new drill",
                "description": "Create a new drill with validation and automatic relationship setup.",
                "operationId": "postdrill_store",
                "tags": [
                    "Training"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Drill"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DrillRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/drills/{drill}": {
            "get": {
                "summary": "Get specific drill",
                "description": "Get detailed information about a specific drill including related data.",
                "operationId": "getdrill_show",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "drill",
                        "in": "path",
                        "required": true,
                        "description": "ID of the drill",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Drill"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific drill",
                "description": "Get detailed information about a specific drill including related data.",
                "operationId": "headdrill_show",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "drill",
                        "in": "path",
                        "required": true,
                        "description": "ID of the drill",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Drill"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update drill",
                "description": "Update an existing drill with partial or complete data replacement.",
                "operationId": "putdrill_update",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "drill",
                        "in": "path",
                        "required": true,
                        "description": "ID of the drill",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Drill"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DrillRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update drill",
                "description": "Update an existing drill with partial or complete data replacement.",
                "operationId": "patchdrill_update",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "drill",
                        "in": "path",
                        "required": true,
                        "description": "ID of the drill",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Drill"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DrillRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete drill",
                "description": "Permanently delete a drill and handle cascading relationships.",
                "operationId": "deletedrill_destroy",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "drill",
                        "in": "path",
                        "required": true,
                        "description": "ID of the drill",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "204": {
                        "description": "Resource deleted successfully"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/drills/search": {
            "get": {
                "summary": "Search drill",
                "description": "Perform search operation on drill",
                "operationId": "getdrill_search",
                "tags": [
                    "Training"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drill"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Search drill",
                "description": "Perform search operation on drill",
                "operationId": "headdrill_search",
                "tags": [
                    "Training"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drill"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/drills/categories": {
            "get": {
                "summary": "Categories drill",
                "description": "Perform categories operation on drill",
                "operationId": "getdrill_categories",
                "tags": [
                    "Training"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drill"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Categories drill",
                "description": "Perform categories operation on drill",
                "operationId": "headdrill_categories",
                "tags": [
                    "Training"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drill"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/drills/category/{category}": {
            "get": {
                "summary": "ByCategory drill",
                "description": "Perform byCategory operation on drill",
                "operationId": "getdrill_byCategory",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "ID of the category",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drill"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "ByCategory drill",
                "description": "Perform byCategory operation on drill",
                "operationId": "headdrill_byCategory",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "ID of the category",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drill"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/drills/ai-generated": {
            "get": {
                "summary": "AiGenerated drill",
                "description": "Perform aiGenerated operation on drill",
                "operationId": "getdrill_aiGenerated",
                "tags": [
                    "Training"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drill"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "AiGenerated drill",
                "description": "Perform aiGenerated operation on drill",
                "operationId": "headdrill_aiGenerated",
                "tags": [
                    "Training"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drill"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/drills/{drill}/effectiveness-rating": {
            "post": {
                "summary": "RateEffectiveness drill",
                "description": "Perform rateEffectiveness operation on drill",
                "operationId": "postdrill_rateEffectiveness",
                "tags": [
                    "Training"
                ],
                "parameters": [
                    {
                        "name": "drill",
                        "in": "path",
                        "required": true,
                        "description": "ID of the drill",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Drill"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/tournaments": {
            "get": {
                "summary": "List all tournament",
                "description": "Retrieve a paginated list of tournament with filtering and sorting options.",
                "operationId": "gettournament_index",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tournament"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all tournament",
                "description": "Retrieve a paginated list of tournament with filtering and sorting options.",
                "operationId": "headtournament_index",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tournament"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new tournament",
                "description": "Create a new tournament with validation and automatic relationship setup.",
                "operationId": "posttournament_store",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tournament"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TournamentRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/tournaments/{tournament}": {
            "get": {
                "summary": "Get specific tournament",
                "description": "Get detailed information about a specific tournament including related data.",
                "operationId": "gettournament_show",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tournament"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific tournament",
                "description": "Get detailed information about a specific tournament including related data.",
                "operationId": "headtournament_show",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tournament"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update tournament",
                "description": "Update an existing tournament with partial or complete data replacement.",
                "operationId": "puttournament_update",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tournament"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TournamentRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update tournament",
                "description": "Update an existing tournament with partial or complete data replacement.",
                "operationId": "patchtournament_update",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tournament"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TournamentRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete tournament",
                "description": "Permanently delete a tournament and handle cascading relationships.",
                "operationId": "deletetournament_destroy",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "204": {
                        "description": "Resource deleted successfully"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/tournaments/{tournament}/teams/{team}": {
            "post": {
                "summary": "AddTeam tournament",
                "description": "Perform addTeam operation on tournament",
                "operationId": "posttournament_addTeam",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "RemoveTeam tournament",
                "description": "Perform removeTeam operation on tournament",
                "operationId": "deletetournament_removeTeam",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/tournaments/{tournament}/generate-bracket": {
            "post": {
                "summary": "GenerateBracket tournament",
                "description": "Perform generateBracket operation on tournament",
                "operationId": "posttournament_generateBracket",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/tournaments/{tournament}/advance-bracket": {
            "post": {
                "summary": "AdvanceBracket tournament",
                "description": "Perform advanceBracket operation on tournament",
                "operationId": "posttournament_advanceBracket",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/tournaments/{tournament}/bracket": {
            "get": {
                "summary": "Bracket tournament",
                "description": "Perform bracket operation on tournament",
                "operationId": "gettournament_bracket",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Bracket tournament",
                "description": "Perform bracket operation on tournament",
                "operationId": "headtournament_bracket",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/tournaments/{tournament}/standings": {
            "get": {
                "summary": "Standings tournament",
                "description": "Perform standings operation on tournament",
                "operationId": "gettournament_standings",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Standings tournament",
                "description": "Perform standings operation on tournament",
                "operationId": "headtournament_standings",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/tournaments/{tournament}/start": {
            "post": {
                "summary": "Start tournament",
                "description": "Perform start operation on tournament",
                "operationId": "posttournament_start",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/tournaments/{tournament}/finish": {
            "post": {
                "summary": "Finish tournament",
                "description": "Perform finish operation on tournament",
                "operationId": "posttournament_finish",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/tournaments/{tournament}/predictions": {
            "get": {
                "summary": "Predictions tournament",
                "description": "Perform predictions operation on tournament",
                "operationId": "gettournament_predictions",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Predictions tournament",
                "description": "Perform predictions operation on tournament",
                "operationId": "headtournament_predictions",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/tournaments/{tournament}/live-stream": {
            "post": {
                "summary": "SetupLiveStream tournament",
                "description": "Perform setupLiveStream operation on tournament",
                "operationId": "posttournament_setupLiveStream",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/videos": {
            "get": {
                "summary": "List all videofile",
                "description": "Retrieve a paginated list of videofile with filtering and sorting options.",
                "operationId": "getvideo_file_index",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Videofile"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all videofile",
                "description": "Retrieve a paginated list of videofile with filtering and sorting options.",
                "operationId": "headvideo_file_index",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Videofile"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new videofile",
                "description": "Create a new videofile with validation and automatic relationship setup.",
                "operationId": "postvideo_file_store",
                "tags": [
                    "Videos"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Videofile"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VideofileRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/videos/{video}": {
            "get": {
                "summary": "Get specific videofile",
                "description": "Get detailed information about a specific videofile including related data.",
                "operationId": "getvideo_file_show",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Videofile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific videofile",
                "description": "Get detailed information about a specific videofile including related data.",
                "operationId": "headvideo_file_show",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Videofile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update videofile",
                "description": "Update an existing videofile with partial or complete data replacement.",
                "operationId": "putvideo_file_update",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Videofile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VideofileRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update videofile",
                "description": "Update an existing videofile with partial or complete data replacement.",
                "operationId": "patchvideo_file_update",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Videofile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VideofileRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete videofile",
                "description": "Permanently delete a videofile and handle cascading relationships.",
                "operationId": "deletevideo_file_destroy",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "204": {
                        "description": "Resource deleted successfully"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/videos/{video}/process": {
            "post": {
                "summary": "Process videofile",
                "description": "Perform process operation on videofile",
                "operationId": "postvideo_file_process",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videofile"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/videos/{video}/download": {
            "get": {
                "summary": "Download videofile",
                "description": "Perform download operation on videofile",
                "operationId": "getvideo_file_download",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videofile"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Download videofile",
                "description": "Perform download operation on videofile",
                "operationId": "headvideo_file_download",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videofile"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/videos/{video}/stream": {
            "get": {
                "summary": "Stream videofile",
                "description": "Perform stream operation on videofile",
                "operationId": "getvideo_file_stream",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videofile"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Stream videofile",
                "description": "Perform stream operation on videofile",
                "operationId": "headvideo_file_stream",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videofile"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/videos/{video}/analyze": {
            "post": {
                "summary": "Analyze videofile",
                "description": "Perform analyze operation on videofile",
                "operationId": "postvideo_file_analyze",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videofile"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/videos/{video}/ai-analysis": {
            "post": {
                "summary": "AiAnalysis videofile",
                "description": "Perform aiAnalysis operation on videofile",
                "operationId": "postvideo_file_aiAnalysis",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videofile"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/videos/{video}/highlights": {
            "get": {
                "summary": "AutoHighlights videofile",
                "description": "Perform autoHighlights operation on videofile",
                "operationId": "getvideo_file_autoHighlights",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videofile"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "AutoHighlights videofile",
                "description": "Perform autoHighlights operation on videofile",
                "operationId": "headvideo_file_autoHighlights",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videofile"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/video-annotations": {
            "get": {
                "summary": "List all videoannotation",
                "description": "Retrieve a paginated list of videoannotation with filtering and sorting options.",
                "operationId": "getvideo_annotation_index",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Videoannotation"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all videoannotation",
                "description": "Retrieve a paginated list of videoannotation with filtering and sorting options.",
                "operationId": "headvideo_annotation_index",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Videoannotation"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new videoannotation",
                "description": "Create a new videoannotation with validation and automatic relationship setup.",
                "operationId": "postvideo_annotation_store",
                "tags": [
                    "Videos"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Videoannotation"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VideoannotationRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/video-annotations/{video_annotation}": {
            "get": {
                "summary": "Get specific videoannotation",
                "description": "Get detailed information about a specific videoannotation including related data.",
                "operationId": "getvideo_annotation_show",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video_annotation",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video_annotation",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Videoannotation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific videoannotation",
                "description": "Get detailed information about a specific videoannotation including related data.",
                "operationId": "headvideo_annotation_show",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video_annotation",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video_annotation",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Videoannotation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update videoannotation",
                "description": "Update an existing videoannotation with partial or complete data replacement.",
                "operationId": "putvideo_annotation_update",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video_annotation",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video_annotation",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Videoannotation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VideoannotationRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update videoannotation",
                "description": "Update an existing videoannotation with partial or complete data replacement.",
                "operationId": "patchvideo_annotation_update",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video_annotation",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video_annotation",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Videoannotation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VideoannotationRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete videoannotation",
                "description": "Permanently delete a videoannotation and handle cascading relationships.",
                "operationId": "deletevideo_annotation_destroy",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video_annotation",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video_annotation",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "204": {
                        "description": "Resource deleted successfully"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/videos/{video}/annotations": {
            "get": {
                "summary": "VideoAnnotations videoannotation",
                "description": "Perform videoAnnotations operation on videoannotation",
                "operationId": "getvideo_annotation_videoAnnotations",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videoannotation"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "VideoAnnotations videoannotation",
                "description": "Perform videoAnnotations operation on videoannotation",
                "operationId": "headvideo_annotation_videoAnnotations",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videoannotation"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/videos/{video}/annotations/bulk": {
            "post": {
                "summary": "BulkStore videoannotation",
                "description": "Perform bulkStore operation on videoannotation",
                "operationId": "postvideo_annotation_bulkStore",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videoannotation"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/videos/{video}/annotations/ai-generate": {
            "post": {
                "summary": "AiGenerate videoannotation",
                "description": "Perform aiGenerate operation on videoannotation",
                "operationId": "postvideo_annotation_aiGenerate",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "name": "video",
                        "in": "path",
                        "required": true,
                        "description": "ID of the video",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Videoannotation"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/ml-analytics/dashboard-overview": {
            "get": {
                "summary": "GetDashboardOverview mlanalytics",
                "description": "Perform getDashboardOverview operation on mlanalytics",
                "operationId": "getm_l_analytics_getDashboardOverview",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "GetDashboardOverview mlanalytics",
                "description": "Perform getDashboardOverview operation on mlanalytics",
                "operationId": "headm_l_analytics_getDashboardOverview",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/ml-analytics/performance-dashboard": {
            "get": {
                "summary": "GetPlayerPerformanceDashboard mlanalytics",
                "description": "Perform getPlayerPerformanceDashboard operation on mlanalytics",
                "operationId": "getm_l_analytics_getPlayerPerformanceDashboard",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "GetPlayerPerformanceDashboard mlanalytics",
                "description": "Perform getPlayerPerformanceDashboard operation on mlanalytics",
                "operationId": "headm_l_analytics_getPlayerPerformanceDashboard",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/ml-analytics/injury-dashboard": {
            "get": {
                "summary": "GetInjuryRiskDashboard mlanalytics",
                "description": "Perform getInjuryRiskDashboard operation on mlanalytics",
                "operationId": "getm_l_analytics_getInjuryRiskDashboard",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "GetInjuryRiskDashboard mlanalytics",
                "description": "Perform getInjuryRiskDashboard operation on mlanalytics",
                "operationId": "headm_l_analytics_getInjuryRiskDashboard",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/ml-analytics/experiment-dashboard": {
            "get": {
                "summary": "GetExperimentDashboard mlanalytics",
                "description": "Perform getExperimentDashboard operation on mlanalytics",
                "operationId": "getm_l_analytics_getExperimentDashboard",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "GetExperimentDashboard mlanalytics",
                "description": "Perform getExperimentDashboard operation on mlanalytics",
                "operationId": "headm_l_analytics_getExperimentDashboard",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/ml-analytics/predictions-timeline": {
            "get": {
                "summary": "GetPredictionsTimeline mlanalytics",
                "description": "Perform getPredictionsTimeline operation on mlanalytics",
                "operationId": "getm_l_analytics_getPredictionsTimeline",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "GetPredictionsTimeline mlanalytics",
                "description": "Perform getPredictionsTimeline operation on mlanalytics",
                "operationId": "headm_l_analytics_getPredictionsTimeline",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/ml-analytics/model-accuracy": {
            "get": {
                "summary": "GetModelAccuracy mlanalytics",
                "description": "Perform getModelAccuracy operation on mlanalytics",
                "operationId": "getm_l_analytics_getModelAccuracy",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "GetModelAccuracy mlanalytics",
                "description": "Perform getModelAccuracy operation on mlanalytics",
                "operationId": "headm_l_analytics_getModelAccuracy",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/ml-analytics/prediction-comparison": {
            "get": {
                "summary": "GetPredictionComparison mlanalytics",
                "description": "Perform getPredictionComparison operation on mlanalytics",
                "operationId": "getm_l_analytics_getPredictionComparison",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "GetPredictionComparison mlanalytics",
                "description": "Perform getPredictionComparison operation on mlanalytics",
                "operationId": "headm_l_analytics_getPredictionComparison",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/ml-analytics/team-chemistry-analysis": {
            "get": {
                "summary": "TeamChemistryAnalysis mlanalytics",
                "description": "Perform teamChemistryAnalysis operation on mlanalytics",
                "operationId": "getm_l_analytics_teamChemistryAnalysis",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "TeamChemistryAnalysis mlanalytics",
                "description": "Perform teamChemistryAnalysis operation on mlanalytics",
                "operationId": "headm_l_analytics_teamChemistryAnalysis",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/ml-analytics/opponent-scouting": {
            "get": {
                "summary": "OpponentScouting mlanalytics",
                "description": "Perform opponentScouting operation on mlanalytics",
                "operationId": "getm_l_analytics_opponentScouting",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "OpponentScouting mlanalytics",
                "description": "Perform opponentScouting operation on mlanalytics",
                "operationId": "headm_l_analytics_opponentScouting",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/ml-analytics/custom-model/train": {
            "post": {
                "summary": "TrainCustomModel mlanalytics",
                "description": "Perform trainCustomModel operation on mlanalytics",
                "operationId": "postm_l_analytics_trainCustomModel",
                "tags": [
                    "Analytics"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/ml-analytics/prediction-explanations/{prediction}": {
            "get": {
                "summary": "ExplainPrediction mlanalytics",
                "description": "Perform explainPrediction operation on mlanalytics",
                "operationId": "getm_l_analytics_explainPrediction",
                "tags": [
                    "Analytics"
                ],
                "parameters": [
                    {
                        "name": "prediction",
                        "in": "path",
                        "required": true,
                        "description": "ID of the prediction",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "ExplainPrediction mlanalytics",
                "description": "Perform explainPrediction operation on mlanalytics",
                "operationId": "headm_l_analytics_explainPrediction",
                "tags": [
                    "Analytics"
                ],
                "parameters": [
                    {
                        "name": "prediction",
                        "in": "path",
                        "required": true,
                        "description": "ID of the prediction",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mlanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/actions": {
            "post": {
                "summary": "AddAction livescoring",
                "description": "Perform addAction operation on livescoring",
                "operationId": "postlive_scoring_addAction",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/score": {
            "put": {
                "summary": "UpdateScore livescoring",
                "description": "Perform updateScore operation on livescoring",
                "operationId": "putlive_scoring_updateScore",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/clock": {
            "post": {
                "summary": "ControlClock livescoring",
                "description": "Perform controlClock operation on livescoring",
                "operationId": "postlive_scoring_controlClock",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/timeout": {
            "post": {
                "summary": "Timeout livescoring",
                "description": "Perform timeout operation on livescoring",
                "operationId": "postlive_scoring_timeout",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "EndTimeout livescoring",
                "description": "Perform endTimeout operation on livescoring",
                "operationId": "deletelive_scoring_endTimeout",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/substitution": {
            "post": {
                "summary": "Substitution livescoring",
                "description": "Perform substitution operation on livescoring",
                "operationId": "postlive_scoring_substitution",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/shot-clock/reset": {
            "post": {
                "summary": "ResetShotClock livescoring",
                "description": "Perform resetShotClock operation on livescoring",
                "operationId": "postlive_scoring_resetShotClock",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/players-on-court": {
            "put": {
                "summary": "UpdatePlayersOnCourt livescoring",
                "description": "Perform updatePlayersOnCourt operation on livescoring",
                "operationId": "putlive_scoring_updatePlayersOnCourt",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/broadcast-event": {
            "post": {
                "summary": "BroadcastEvent livescoring",
                "description": "Perform broadcastEvent operation on livescoring",
                "operationId": "postlive_scoring_broadcastEvent",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/games/{game}/real-time-metrics": {
            "get": {
                "summary": "RealTimeMetrics livescoring",
                "description": "Perform realTimeMetrics operation on livescoring",
                "operationId": "getlive_scoring_realTimeMetrics",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "RealTimeMetrics livescoring",
                "description": "Perform realTimeMetrics operation on livescoring",
                "operationId": "headlive_scoring_realTimeMetrics",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/actions/{action}": {
            "put": {
                "summary": "CorrectAction livescoring",
                "description": "Perform correctAction operation on livescoring",
                "operationId": "putlive_scoring_correctAction",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "path",
                        "required": true,
                        "description": "ID of the action",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "DeleteAction livescoring",
                "description": "Perform deleteAction operation on livescoring",
                "operationId": "deletelive_scoring_deleteAction",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "path",
                        "required": true,
                        "description": "ID of the action",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/actions/{action}/impact-analysis": {
            "get": {
                "summary": "ActionImpactAnalysis livescoring",
                "description": "Perform actionImpactAnalysis operation on livescoring",
                "operationId": "getlive_scoring_actionImpactAnalysis",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "path",
                        "required": true,
                        "description": "ID of the action",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "ActionImpactAnalysis livescoring",
                "description": "Perform actionImpactAnalysis operation on livescoring",
                "operationId": "headlive_scoring_actionImpactAnalysis",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "path",
                        "required": true,
                        "description": "ID of the action",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/webhooks": {
            "get": {
                "summary": "List all webhook",
                "description": "Retrieve a paginated list of webhook with filtering and sorting options.",
                "operationId": "getv4_webhook_index",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Webhook"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all webhook",
                "description": "Retrieve a paginated list of webhook with filtering and sorting options.",
                "operationId": "headv4_webhook_index",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Webhook"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new webhook",
                "description": "Create a new webhook with validation and automatic relationship setup.",
                "operationId": "postv4_webhook_store",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Webhook"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/webhooks/{webhook}": {
            "get": {
                "summary": "Get specific webhook",
                "description": "Get detailed information about a specific webhook including related data.",
                "operationId": "getv4_webhook_show",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "webhook",
                        "in": "path",
                        "required": true,
                        "description": "ID of the webhook",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Webhook"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific webhook",
                "description": "Get detailed information about a specific webhook including related data.",
                "operationId": "headv4_webhook_show",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "webhook",
                        "in": "path",
                        "required": true,
                        "description": "ID of the webhook",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Webhook"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update webhook",
                "description": "Update an existing webhook with partial or complete data replacement.",
                "operationId": "putv4_webhook_update",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "webhook",
                        "in": "path",
                        "required": true,
                        "description": "ID of the webhook",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Webhook"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update webhook",
                "description": "Update an existing webhook with partial or complete data replacement.",
                "operationId": "patchv4_webhook_update",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "webhook",
                        "in": "path",
                        "required": true,
                        "description": "ID of the webhook",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Webhook"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete webhook",
                "description": "Permanently delete a webhook and handle cascading relationships.",
                "operationId": "deletev4_webhook_destroy",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "webhook",
                        "in": "path",
                        "required": true,
                        "description": "ID of the webhook",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "204": {
                        "description": "Resource deleted successfully"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/webhooks/{webhook}/test": {
            "post": {
                "summary": "Test webhook",
                "description": "Perform test operation on webhook",
                "operationId": "postv4_webhook_test",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "webhook",
                        "in": "path",
                        "required": true,
                        "description": "ID of the webhook",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhook"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/webhooks/{webhook}/deliveries": {
            "get": {
                "summary": "Deliveries webhook",
                "description": "Perform deliveries operation on webhook",
                "operationId": "getv4_webhook_deliveries",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "webhook",
                        "in": "path",
                        "required": true,
                        "description": "ID of the webhook",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhook"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Deliveries webhook",
                "description": "Perform deliveries operation on webhook",
                "operationId": "headv4_webhook_deliveries",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "webhook",
                        "in": "path",
                        "required": true,
                        "description": "ID of the webhook",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhook"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/webhooks/{webhook}/deliveries/{delivery}/redeliver": {
            "post": {
                "summary": "Redeliver webhook",
                "description": "Perform redeliver operation on webhook",
                "operationId": "postv4_webhook_redeliver",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "webhook",
                        "in": "path",
                        "required": true,
                        "description": "ID of the webhook",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "delivery",
                        "in": "path",
                        "required": true,
                        "description": "ID of the delivery",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Webhook"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/subscriptions/current": {
            "get": {
                "summary": "Current subscription",
                "description": "Perform current operation on subscription",
                "operationId": "getv4_subscription_current",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Current subscription",
                "description": "Perform current operation on subscription",
                "operationId": "headv4_subscription_current",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/subscriptions/upgrade": {
            "post": {
                "summary": "Upgrade subscription",
                "description": "Perform upgrade operation on subscription",
                "operationId": "postv4_subscription_upgrade",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/subscriptions/cancel": {
            "post": {
                "summary": "Cancel subscription",
                "description": "Perform cancel operation on subscription",
                "operationId": "postv4_subscription_cancel",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/subscriptions/usage": {
            "get": {
                "summary": "Usage subscription",
                "description": "Perform usage operation on subscription",
                "operationId": "getv4_subscription_usage",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Usage subscription",
                "description": "Perform usage operation on subscription",
                "operationId": "headv4_subscription_usage",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/subscriptions/billing-history": {
            "get": {
                "summary": "BillingHistory subscription",
                "description": "Perform billingHistory operation on subscription",
                "operationId": "getv4_subscription_billingHistory",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "BillingHistory subscription",
                "description": "Perform billingHistory operation on subscription",
                "operationId": "headv4_subscription_billingHistory",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/integrations/dbb/teams/search": {
            "get": {
                "summary": "DbbTeamSearch integration",
                "description": "Perform dbbTeamSearch operation on integration",
                "operationId": "getv4_integration_dbbTeamSearch",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "DbbTeamSearch integration",
                "description": "Perform dbbTeamSearch operation on integration",
                "operationId": "headv4_integration_dbbTeamSearch",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/integrations/dbb/players/search": {
            "get": {
                "summary": "DbbPlayerSearch integration",
                "description": "Perform dbbPlayerSearch operation on integration",
                "operationId": "getv4_integration_dbbPlayerSearch",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "DbbPlayerSearch integration",
                "description": "Perform dbbPlayerSearch operation on integration",
                "operationId": "headv4_integration_dbbPlayerSearch",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/integrations/dbb/sync/team/{team}": {
            "post": {
                "summary": "SyncWithDbb integration",
                "description": "Perform syncWithDbb operation on integration",
                "operationId": "postv4_integration_syncWithDbb",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/integrations/fiba/rankings": {
            "get": {
                "summary": "FibaRankings integration",
                "description": "Perform fibaRankings operation on integration",
                "operationId": "getv4_integration_fibaRankings",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "FibaRankings integration",
                "description": "Perform fibaRankings operation on integration",
                "operationId": "headv4_integration_fibaRankings",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/integrations/fiba/tournaments": {
            "get": {
                "summary": "FibaTournaments integration",
                "description": "Perform fibaTournaments operation on integration",
                "operationId": "getv4_integration_fibaTournaments",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "FibaTournaments integration",
                "description": "Perform fibaTournaments operation on integration",
                "operationId": "headv4_integration_fibaTournaments",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/integrations/fiba/team/{team}/international-data": {
            "get": {
                "summary": "FibaTeamData integration",
                "description": "Perform fibaTeamData operation on integration",
                "operationId": "getv4_integration_fibaTeamData",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "FibaTeamData integration",
                "description": "Perform fibaTeamData operation on integration",
                "operationId": "headv4_integration_fibaTeamData",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Integration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/notifications/push/subscribe": {
            "post": {
                "summary": "SubscribePush notification",
                "description": "Perform subscribePush operation on notification",
                "operationId": "postv4_notification_subscribePush",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/notifications/push/unsubscribe": {
            "delete": {
                "summary": "UnsubscribePush notification",
                "description": "Perform unsubscribePush operation on notification",
                "operationId": "deletev4_notification_unsubscribePush",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/notifications/preferences": {
            "get": {
                "summary": "GetPreferences notification",
                "description": "Perform getPreferences operation on notification",
                "operationId": "getv4_notification_getPreferences",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "GetPreferences notification",
                "description": "Perform getPreferences operation on notification",
                "operationId": "headv4_notification_getPreferences",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "UpdatePreferences notification",
                "description": "Perform updatePreferences operation on notification",
                "operationId": "putv4_notification_updatePreferences",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/notifications/history": {
            "get": {
                "summary": "History notification",
                "description": "Perform history operation on notification",
                "operationId": "getv4_notification_history",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "History notification",
                "description": "Perform history operation on notification",
                "operationId": "headv4_notification_history",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/notifications/test": {
            "post": {
                "summary": "SendTest notification",
                "description": "Perform sendTest operation on notification",
                "operationId": "postv4_notification_sendTest",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/analytics/advanced/revenue-analytics": {
            "get": {
                "summary": "RevenueAnalytics advancedanalytics",
                "description": "Perform revenueAnalytics operation on advancedanalytics",
                "operationId": "getv4_advanced_analytics_revenueAnalytics",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Advancedanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "RevenueAnalytics advancedanalytics",
                "description": "Perform revenueAnalytics operation on advancedanalytics",
                "operationId": "headv4_advanced_analytics_revenueAnalytics",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Advancedanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/analytics/advanced/user-engagement": {
            "get": {
                "summary": "UserEngagement advancedanalytics",
                "description": "Perform userEngagement operation on advancedanalytics",
                "operationId": "getv4_advanced_analytics_userEngagement",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Advancedanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "UserEngagement advancedanalytics",
                "description": "Perform userEngagement operation on advancedanalytics",
                "operationId": "headv4_advanced_analytics_userEngagement",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Advancedanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/analytics/advanced/feature-usage": {
            "get": {
                "summary": "FeatureUsage advancedanalytics",
                "description": "Perform featureUsage operation on advancedanalytics",
                "operationId": "getv4_advanced_analytics_featureUsage",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Advancedanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "FeatureUsage advancedanalytics",
                "description": "Perform featureUsage operation on advancedanalytics",
                "operationId": "headv4_advanced_analytics_featureUsage",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Advancedanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/analytics/advanced/performance-metrics": {
            "get": {
                "summary": "PerformanceMetrics advancedanalytics",
                "description": "Perform performanceMetrics operation on advancedanalytics",
                "operationId": "getv4_advanced_analytics_performanceMetrics",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Advancedanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "PerformanceMetrics advancedanalytics",
                "description": "Perform performanceMetrics operation on advancedanalytics",
                "operationId": "headv4_advanced_analytics_performanceMetrics",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Advancedanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/analytics/advanced/retention-analysis": {
            "get": {
                "summary": "RetentionAnalysis advancedanalytics",
                "description": "Perform retentionAnalysis operation on advancedanalytics",
                "operationId": "getv4_advanced_analytics_retentionAnalysis",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Advancedanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "RetentionAnalysis advancedanalytics",
                "description": "Perform retentionAnalysis operation on advancedanalytics",
                "operationId": "headv4_advanced_analytics_retentionAnalysis",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Advancedanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/analytics/advanced/custom-report": {
            "post": {
                "summary": "GenerateCustomReport advancedanalytics",
                "description": "Perform generateCustomReport operation on advancedanalytics",
                "operationId": "postv4_advanced_analytics_generateCustomReport",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Advancedanalytics"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v4/public/tournaments/{tournament}": {
            "get": {
                "summary": "Get specific tournament",
                "description": "Get detailed information about a specific tournament including related data.",
                "operationId": "gettournament_show",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tournament"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "Get specific tournament",
                "description": "Get detailed information about a specific tournament including related data.",
                "operationId": "headtournament_show",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tournament"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/tournaments/{tournament}/bracket": {
            "get": {
                "summary": "Bracket tournament",
                "description": "Perform bracket operation on tournament",
                "operationId": "gettournament_bracket",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "Bracket tournament",
                "description": "Perform bracket operation on tournament",
                "operationId": "headtournament_bracket",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/tournaments/{tournament}/standings": {
            "get": {
                "summary": "Standings tournament",
                "description": "Perform standings operation on tournament",
                "operationId": "gettournament_standings",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "Standings tournament",
                "description": "Perform standings operation on tournament",
                "operationId": "headtournament_standings",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/tournaments/{tournament}/live-feed": {
            "get": {
                "summary": "LiveFeed tournament",
                "description": "Perform liveFeed operation on tournament",
                "operationId": "gettournament_liveFeed",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "LiveFeed tournament",
                "description": "Perform liveFeed operation on tournament",
                "operationId": "headtournament_liveFeed",
                "tags": [
                    "Tournaments"
                ],
                "parameters": [
                    {
                        "name": "tournament",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tournament",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/games/{game}": {
            "get": {
                "summary": "Get specific game",
                "description": "Get detailed information about a specific game including related data.",
                "operationId": "getgame_show",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "Get specific game",
                "description": "Get detailed information about a specific game including related data.",
                "operationId": "headgame_show",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Game"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/games/{game}/live-score": {
            "get": {
                "summary": "LiveScore game",
                "description": "Perform liveScore operation on game",
                "operationId": "getgame_liveScore",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "LiveScore game",
                "description": "Perform liveScore operation on game",
                "operationId": "headgame_liveScore",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/games/{game}/live-feed": {
            "get": {
                "summary": "LiveFeed game",
                "description": "Perform liveFeed operation on game",
                "operationId": "getgame_liveFeed",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "LiveFeed game",
                "description": "Perform liveFeed operation on game",
                "operationId": "headgame_liveFeed",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Game"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/teams/{team}": {
            "get": {
                "summary": "Get specific team",
                "description": "Get detailed information about a specific team including related data.",
                "operationId": "getteam_show",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "Get specific team",
                "description": "Get detailed information about a specific team including related data.",
                "operationId": "headteam_show",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Team"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/teams/{team}/players": {
            "get": {
                "summary": "Players team",
                "description": "Perform players operation on team",
                "operationId": "getteam_players",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "Players team",
                "description": "Perform players operation on team",
                "operationId": "headteam_players",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/teams/{team}/games": {
            "get": {
                "summary": "Games team",
                "description": "Perform games operation on team",
                "operationId": "getteam_games",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "Games team",
                "description": "Perform games operation on team",
                "operationId": "headteam_games",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/teams/{team}/public-stats": {
            "get": {
                "summary": "PublicStats team",
                "description": "Perform publicStats operation on team",
                "operationId": "getteam_publicStats",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "PublicStats team",
                "description": "Perform publicStats operation on team",
                "operationId": "headteam_publicStats",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "ID of the team",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/games/{game}/live-data": {
            "get": {
                "summary": "GetLiveData livescoring",
                "description": "Perform getLiveData operation on livescoring",
                "operationId": "getlive_scoring_getLiveData",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "GetLiveData livescoring",
                "description": "Perform getLiveData operation on livescoring",
                "operationId": "headlive_scoring_getLiveData",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "game",
                        "in": "path",
                        "required": true,
                        "description": "ID of the game",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Livescoring"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/league/standings": {
            "get": {
                "summary": "LeagueStandings public",
                "description": "Perform leagueStandings operation on public",
                "operationId": "getv4_public_leagueStandings",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Public"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "LeagueStandings public",
                "description": "Perform leagueStandings operation on public",
                "operationId": "headv4_public_leagueStandings",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Public"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/league/top-performers": {
            "get": {
                "summary": "TopPerformers public",
                "description": "Perform topPerformers operation on public",
                "operationId": "getv4_public_topPerformers",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Public"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "TopPerformers public",
                "description": "Perform topPerformers operation on public",
                "operationId": "headv4_public_topPerformers",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Public"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/schedule/upcoming": {
            "get": {
                "summary": "UpcomingGames public",
                "description": "Perform upcomingGames operation on public",
                "operationId": "getv4_public_upcomingGames",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Public"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "UpcomingGames public",
                "description": "Perform upcomingGames operation on public",
                "operationId": "headv4_public_upcomingGames",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Public"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/v4/public/statistics/league-leaders": {
            "get": {
                "summary": "LeagueLeaders public",
                "description": "Perform leagueLeaders operation on public",
                "operationId": "getv4_public_leagueLeaders",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Public"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            },
            "head": {
                "summary": "LeagueLeaders public",
                "description": "Perform leagueLeaders operation on public",
                "operationId": "headv4_public_leagueLeaders",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Public"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": []
            }
        },
        "/api/admin/rate-limits/dashboard": {
            "get": {
                "summary": "Dashboard ratelimit",
                "description": "Perform dashboard operation on ratelimit",
                "operationId": "getrate_limit_dashboard",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Dashboard ratelimit",
                "description": "Perform dashboard operation on ratelimit",
                "operationId": "headrate_limit_dashboard",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/rate-limits/user/{user}/status": {
            "get": {
                "summary": "UserStatus ratelimit",
                "description": "Perform userStatus operation on ratelimit",
                "operationId": "getrate_limit_userStatus",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "ID of the user",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "UserStatus ratelimit",
                "description": "Perform userStatus operation on ratelimit",
                "operationId": "headrate_limit_userStatus",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "ID of the user",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/rate-limits/exceptions": {
            "post": {
                "summary": "CreateException ratelimit",
                "description": "Perform createException operation on ratelimit",
                "operationId": "postrate_limit_createException",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "Exceptions ratelimit",
                "description": "Perform exceptions operation on ratelimit",
                "operationId": "getrate_limit_exceptions",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Exceptions ratelimit",
                "description": "Perform exceptions operation on ratelimit",
                "operationId": "headrate_limit_exceptions",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/rate-limits/exceptions/{exception}/revoke": {
            "delete": {
                "summary": "RevokeException ratelimit",
                "description": "Perform revokeException operation on ratelimit",
                "operationId": "deleterate_limit_revokeException",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "exception",
                        "in": "path",
                        "required": true,
                        "description": "ID of the exception",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/rate-limits/exceptions/{exception}/extend": {
            "patch": {
                "summary": "ExtendException ratelimit",
                "description": "Perform extendException operation on ratelimit",
                "operationId": "patchrate_limit_extendException",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "exception",
                        "in": "path",
                        "required": true,
                        "description": "ID of the exception",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/rate-limits/user/{user}/subscription": {
            "patch": {
                "summary": "UpdateSubscription ratelimit",
                "description": "Perform updateSubscription operation on ratelimit",
                "operationId": "patchrate_limit_updateSubscription",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "ID of the user",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/rate-limits/user/{user}/reset-quota": {
            "post": {
                "summary": "ResetQuota ratelimit",
                "description": "Perform resetQuota operation on ratelimit",
                "operationId": "postrate_limit_resetQuota",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "ID of the user",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/rate-limits/analytics": {
            "get": {
                "summary": "Analytics ratelimit",
                "description": "Perform analytics operation on ratelimit",
                "operationId": "getrate_limit_analytics",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Analytics ratelimit",
                "description": "Perform analytics operation on ratelimit",
                "operationId": "headrate_limit_analytics",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ratelimit"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/emergency/contacts": {
            "get": {
                "summary": "List all emergencycontact",
                "description": "Retrieve a paginated list of emergencycontact with filtering and sorting options.",
                "operationId": "getv2_emergency_contact_index",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Emergencycontact"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "List all emergencycontact",
                "description": "Retrieve a paginated list of emergencycontact with filtering and sorting options.",
                "operationId": "headv2_emergency_contact_index",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        },
                        "example": 15
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search term for filtering results",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lakers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Emergencycontact"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create new emergencycontact",
                "description": "Create a new emergencycontact with validation and automatic relationship setup.",
                "operationId": "postv2_emergency_contact_store",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Emergencycontact"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmergencycontactRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/emergency/contacts/{contact}": {
            "get": {
                "summary": "Get specific emergencycontact",
                "description": "Get detailed information about a specific emergencycontact including related data.",
                "operationId": "getv2_emergency_contact_show",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "ID of the contact",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Emergencycontact"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Get specific emergencycontact",
                "description": "Get detailed information about a specific emergencycontact including related data.",
                "operationId": "headv2_emergency_contact_show",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "ID of the contact",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Emergencycontact"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update emergencycontact",
                "description": "Update an existing emergencycontact with partial or complete data replacement.",
                "operationId": "putv2_emergency_contact_update",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "ID of the contact",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Emergencycontact"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmergencycontactRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update emergencycontact",
                "description": "Update an existing emergencycontact with partial or complete data replacement.",
                "operationId": "patchv2_emergency_contact_update",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "ID of the contact",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Emergencycontact"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmergencycontactRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete emergencycontact",
                "description": "Permanently delete a emergencycontact and handle cascading relationships.",
                "operationId": "deletev2_emergency_contact_destroy",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "required": true,
                        "description": "ID of the contact",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "204": {
                        "description": "Resource deleted successfully"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/emergency/contacts/player/{player}": {
            "get": {
                "summary": "ByPlayer emergencycontact",
                "description": "Perform byPlayer operation on emergencycontact",
                "operationId": "getv2_emergency_contact_byPlayer",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emergencycontact"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "ByPlayer emergencycontact",
                "description": "Perform byPlayer operation on emergencycontact",
                "operationId": "headv2_emergency_contact_byPlayer",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "player",
                        "in": "path",
                        "required": true,
                        "description": "ID of the player",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emergencycontact"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/emergency/contacts/{emergencyContact}/primary": {
            "patch": {
                "summary": "SetPrimary emergencycontact",
                "description": "Perform setPrimary operation on emergencycontact",
                "operationId": "patchv2_emergency_contact_setPrimary",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "emergencyContact",
                        "in": "path",
                        "required": true,
                        "description": "ID of the emergencyContact",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emergencycontact"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/emergency/contacts/{emergencyContact}/consent": {
            "patch": {
                "summary": "UpdateConsent emergencycontact",
                "description": "Perform updateConsent operation on emergencycontact",
                "operationId": "patchv2_emergency_contact_updateConsent",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "emergencyContact",
                        "in": "path",
                        "required": true,
                        "description": "ID of the emergencyContact",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emergencycontact"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/emergency/contacts/{emergencyContact}/qr": {
            "post": {
                "summary": "GenerateQR emergencycontact",
                "description": "Perform generateQR operation on emergencycontact",
                "operationId": "postv2_emergency_contact_generateQR",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "emergencyContact",
                        "in": "path",
                        "required": true,
                        "description": "ID of the emergencyContact",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emergencycontact"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/emergency/access/{token}": {
            "get": {
                "summary": "EmergencyAccess emergencycontact",
                "description": "Perform emergencyAccess operation on emergencycontact",
                "operationId": "getv2_emergency_contact_emergencyAccess",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "description": "ID of the token",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emergencycontact"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "EmergencyAccess emergencycontact",
                "description": "Perform emergencyAccess operation on emergencycontact",
                "operationId": "headv2_emergency_contact_emergencyAccess",
                "tags": [
                    "General"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "description": "ID of the token",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emergencycontact"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/emergency/statistics": {
            "get": {
                "summary": "Statistics emergencycontact",
                "description": "Perform statistics operation on emergencycontact",
                "operationId": "getv2_emergency_contact_statistics",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emergencycontact"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "head": {
                "summary": "Statistics emergencycontact",
                "description": "Perform statistics operation on emergencycontact",
                "operationId": "headv2_emergency_contact_statistics",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emergencycontact"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/gdpr/consents/update": {
            "post": {
                "summary": "UpdateConsent datasubject",
                "description": "Perform updateConsent operation on datasubject",
                "operationId": "postdata_subject_updateConsent",
                "tags": [
                    "General"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Datasubject"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Team": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Los Angeles Lakers"
                    },
                    "personal_team": {
                        "type": "boolean",
                        "example": true
                    },
                    "user_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "uuid": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "club_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "short_name": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "slug": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "description": {
                        "type": "string",
                        "example": "Professional basketball team"
                    },
                    "logo_path": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "gender": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "age_group": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "division": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "league": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "season": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "season_start": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "season_end": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "primary_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "secondary_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "jersey_home_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "jersey_away_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "max_players": {
                        "type": "integer",
                        "example": 1
                    },
                    "min_players": {
                        "type": "integer",
                        "example": 1
                    },
                    "training_schedule": {
                        "type": "object",
                        "example": []
                    },
                    "practice_times": {
                        "type": "object",
                        "example": []
                    },
                    "head_coach_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "assistant_coaches": {
                        "type": "object",
                        "example": []
                    },
                    "games_played": {
                        "type": "integer",
                        "example": 1
                    },
                    "games_won": {
                        "type": "integer",
                        "example": 1
                    },
                    "games_lost": {
                        "type": "integer",
                        "example": 1
                    },
                    "games_tied": {
                        "type": "integer",
                        "example": 1
                    },
                    "points_scored": {
                        "type": "integer",
                        "example": 1
                    },
                    "points_allowed": {
                        "type": "integer",
                        "example": 1
                    },
                    "preferences": {
                        "type": "object",
                        "example": []
                    },
                    "settings": {
                        "type": "object",
                        "example": []
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_recruiting": {
                        "type": "boolean",
                        "example": true
                    },
                    "status": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "home_venue": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "home_venue_address": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "venue_details": {
                        "type": "object",
                        "example": []
                    },
                    "registration_number": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "is_certified": {
                        "type": "boolean",
                        "example": true
                    },
                    "certified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "emergency_contacts": {
                        "type": "object",
                        "example": []
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp",
                        "example": "2024-08-12T15:45:00Z"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Unique identifier",
                        "example": 1
                    }
                },
                "required": []
            },
            "TeamRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Los Angeles Lakers"
                    },
                    "personal_team": {
                        "type": "boolean",
                        "example": true
                    },
                    "user_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "uuid": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "club_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "short_name": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "slug": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "description": {
                        "type": "string",
                        "example": "Professional basketball team"
                    },
                    "logo_path": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "gender": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "age_group": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "division": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "league": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "season": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "season_start": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "season_end": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "primary_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "secondary_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "jersey_home_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "jersey_away_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "max_players": {
                        "type": "integer",
                        "example": 1
                    },
                    "min_players": {
                        "type": "integer",
                        "example": 1
                    },
                    "training_schedule": {
                        "type": "object",
                        "example": []
                    },
                    "practice_times": {
                        "type": "object",
                        "example": []
                    },
                    "head_coach_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "assistant_coaches": {
                        "type": "object",
                        "example": []
                    },
                    "games_played": {
                        "type": "integer",
                        "example": 1
                    },
                    "games_won": {
                        "type": "integer",
                        "example": 1
                    },
                    "games_lost": {
                        "type": "integer",
                        "example": 1
                    },
                    "games_tied": {
                        "type": "integer",
                        "example": 1
                    },
                    "points_scored": {
                        "type": "integer",
                        "example": 1
                    },
                    "points_allowed": {
                        "type": "integer",
                        "example": 1
                    },
                    "preferences": {
                        "type": "object",
                        "example": []
                    },
                    "settings": {
                        "type": "object",
                        "example": []
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_recruiting": {
                        "type": "boolean",
                        "example": true
                    },
                    "status": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "home_venue": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "home_venue_address": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "venue_details": {
                        "type": "object",
                        "example": []
                    },
                    "registration_number": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "is_certified": {
                        "type": "boolean",
                        "example": true
                    },
                    "certified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "emergency_contacts": {
                        "type": "object",
                        "example": []
                    }
                },
                "required": []
            },
            "Player": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "user_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "team_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "jersey_number": {
                        "type": "integer",
                        "example": 1
                    },
                    "primary_position": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "secondary_positions": {
                        "type": "object",
                        "example": []
                    },
                    "height_cm": {
                        "type": "integer",
                        "example": 1
                    },
                    "weight_kg": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "dominant_hand": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "shoe_size": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "started_playing": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "years_experience": {
                        "type": "integer",
                        "example": 1
                    },
                    "previous_teams": {
                        "type": "object",
                        "example": []
                    },
                    "achievements": {
                        "type": "object",
                        "example": []
                    },
                    "shooting_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "defense_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "passing_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "rebounding_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "speed_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "overall_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "games_played": {
                        "type": "integer",
                        "example": 1
                    },
                    "games_started": {
                        "type": "integer",
                        "example": 1
                    },
                    "minutes_played": {
                        "type": "integer",
                        "example": 1
                    },
                    "points_scored": {
                        "type": "integer",
                        "example": 1
                    },
                    "field_goals_made": {
                        "type": "integer",
                        "example": 1
                    },
                    "field_goals_attempted": {
                        "type": "integer",
                        "example": 1
                    },
                    "three_pointers_made": {
                        "type": "integer",
                        "example": 1
                    },
                    "three_pointers_attempted": {
                        "type": "integer",
                        "example": 1
                    },
                    "free_throws_made": {
                        "type": "integer",
                        "example": 1
                    },
                    "free_throws_attempted": {
                        "type": "integer",
                        "example": 1
                    },
                    "rebounds_offensive": {
                        "type": "integer",
                        "example": 1
                    },
                    "rebounds_defensive": {
                        "type": "integer",
                        "example": 1
                    },
                    "rebounds_total": {
                        "type": "integer",
                        "example": 1
                    },
                    "assists": {
                        "type": "integer",
                        "example": 1
                    },
                    "steals": {
                        "type": "integer",
                        "example": 1
                    },
                    "blocks": {
                        "type": "integer",
                        "example": 1
                    },
                    "turnovers": {
                        "type": "integer",
                        "example": 1
                    },
                    "fouls_personal": {
                        "type": "integer",
                        "example": 1
                    },
                    "fouls_technical": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "is_starter": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_captain": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_rookie": {
                        "type": "boolean",
                        "example": true
                    },
                    "contract_start": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "contract_end": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "registration_number": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "is_registered": {
                        "type": "boolean",
                        "example": true
                    },
                    "registered_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "medical_conditions": {
                        "type": "object",
                        "example": []
                    },
                    "allergies": {
                        "type": "object",
                        "example": []
                    },
                    "medications": {
                        "type": "object",
                        "example": []
                    },
                    "blood_type": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "last_medical_check": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "medical_clearance": {
                        "type": "boolean",
                        "example": true
                    },
                    "medical_clearance_expires": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "emergency_medical_contact": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "emergency_medical_phone": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "preferred_hospital": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "medical_notes": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "insurance_provider": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "insurance_policy_number": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "insurance_expires": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "parent_user_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "guardian_contacts": {
                        "type": "object",
                        "example": []
                    },
                    "training_focus_areas": {
                        "type": "object",
                        "example": []
                    },
                    "development_goals": {
                        "type": "object",
                        "example": []
                    },
                    "coach_notes": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "preferences": {
                        "type": "object",
                        "example": []
                    },
                    "dietary_restrictions": {
                        "type": "object",
                        "example": []
                    },
                    "school_name": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "grade_level": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "gpa": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "academic_eligibility": {
                        "type": "boolean",
                        "example": true
                    },
                    "social_media": {
                        "type": "object",
                        "example": []
                    },
                    "allow_photos": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_media_interviews": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp",
                        "example": "2024-08-12T15:45:00Z"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Unique identifier",
                        "example": 1
                    }
                },
                "required": []
            },
            "PlayerRequest": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "user_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "team_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "jersey_number": {
                        "type": "integer",
                        "example": 1
                    },
                    "primary_position": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "secondary_positions": {
                        "type": "object",
                        "example": []
                    },
                    "height_cm": {
                        "type": "integer",
                        "example": 1
                    },
                    "weight_kg": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "dominant_hand": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "shoe_size": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "started_playing": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "years_experience": {
                        "type": "integer",
                        "example": 1
                    },
                    "previous_teams": {
                        "type": "object",
                        "example": []
                    },
                    "achievements": {
                        "type": "object",
                        "example": []
                    },
                    "shooting_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "defense_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "passing_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "rebounding_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "speed_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "overall_rating": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "games_played": {
                        "type": "integer",
                        "example": 1
                    },
                    "games_started": {
                        "type": "integer",
                        "example": 1
                    },
                    "minutes_played": {
                        "type": "integer",
                        "example": 1
                    },
                    "points_scored": {
                        "type": "integer",
                        "example": 1
                    },
                    "field_goals_made": {
                        "type": "integer",
                        "example": 1
                    },
                    "field_goals_attempted": {
                        "type": "integer",
                        "example": 1
                    },
                    "three_pointers_made": {
                        "type": "integer",
                        "example": 1
                    },
                    "three_pointers_attempted": {
                        "type": "integer",
                        "example": 1
                    },
                    "free_throws_made": {
                        "type": "integer",
                        "example": 1
                    },
                    "free_throws_attempted": {
                        "type": "integer",
                        "example": 1
                    },
                    "rebounds_offensive": {
                        "type": "integer",
                        "example": 1
                    },
                    "rebounds_defensive": {
                        "type": "integer",
                        "example": 1
                    },
                    "rebounds_total": {
                        "type": "integer",
                        "example": 1
                    },
                    "assists": {
                        "type": "integer",
                        "example": 1
                    },
                    "steals": {
                        "type": "integer",
                        "example": 1
                    },
                    "blocks": {
                        "type": "integer",
                        "example": 1
                    },
                    "turnovers": {
                        "type": "integer",
                        "example": 1
                    },
                    "fouls_personal": {
                        "type": "integer",
                        "example": 1
                    },
                    "fouls_technical": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "is_starter": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_captain": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_rookie": {
                        "type": "boolean",
                        "example": true
                    },
                    "contract_start": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "contract_end": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "registration_number": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "is_registered": {
                        "type": "boolean",
                        "example": true
                    },
                    "registered_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "medical_conditions": {
                        "type": "object",
                        "example": []
                    },
                    "allergies": {
                        "type": "object",
                        "example": []
                    },
                    "medications": {
                        "type": "object",
                        "example": []
                    },
                    "blood_type": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "last_medical_check": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "medical_clearance": {
                        "type": "boolean",
                        "example": true
                    },
                    "medical_clearance_expires": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "emergency_medical_contact": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "emergency_medical_phone": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "preferred_hospital": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "medical_notes": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "insurance_provider": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "insurance_policy_number": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "insurance_expires": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "parent_user_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "guardian_contacts": {
                        "type": "object",
                        "example": []
                    },
                    "training_focus_areas": {
                        "type": "object",
                        "example": []
                    },
                    "development_goals": {
                        "type": "object",
                        "example": []
                    },
                    "coach_notes": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "preferences": {
                        "type": "object",
                        "example": []
                    },
                    "dietary_restrictions": {
                        "type": "object",
                        "example": []
                    },
                    "school_name": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "grade_level": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "gpa": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "academic_eligibility": {
                        "type": "boolean",
                        "example": true
                    },
                    "social_media": {
                        "type": "object",
                        "example": []
                    },
                    "allow_photos": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_media_interviews": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": []
            },
            "Game": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "home_team_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "away_team_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "scheduled_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "actual_start_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "actual_end_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "venue": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "venue_address": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "type": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "season": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "league": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "division": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "status": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "home_team_score": {
                        "type": "integer",
                        "example": 1
                    },
                    "away_team_score": {
                        "type": "integer",
                        "example": 1
                    },
                    "period_scores": {
                        "type": "object",
                        "example": []
                    },
                    "current_period": {
                        "type": "integer",
                        "example": 1
                    },
                    "total_periods": {
                        "type": "integer",
                        "example": 1
                    },
                    "period_length_minutes": {
                        "type": "integer",
                        "example": 1
                    },
                    "time_remaining_seconds": {
                        "type": "integer",
                        "example": 1
                    },
                    "clock_running": {
                        "type": "boolean",
                        "example": true
                    },
                    "overtime_periods": {
                        "type": "integer",
                        "example": 1
                    },
                    "overtime_length_minutes": {
                        "type": "integer",
                        "example": 1
                    },
                    "referees": {
                        "type": "object",
                        "example": []
                    },
                    "scorekeepers": {
                        "type": "object",
                        "example": []
                    },
                    "timekeepers": {
                        "type": "object",
                        "example": []
                    },
                    "team_stats": {
                        "type": "object",
                        "example": []
                    },
                    "player_stats": {
                        "type": "object",
                        "example": []
                    },
                    "live_commentary": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "play_by_play": {
                        "type": "object",
                        "example": []
                    },
                    "substitutions": {
                        "type": "object",
                        "example": []
                    },
                    "timeouts": {
                        "type": "object",
                        "example": []
                    },
                    "team_fouls": {
                        "type": "object",
                        "example": []
                    },
                    "technical_fouls": {
                        "type": "object",
                        "example": []
                    },
                    "ejections": {
                        "type": "object",
                        "example": []
                    },
                    "result": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "winning_team_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "point_differential": {
                        "type": "integer",
                        "example": 1
                    },
                    "tournament_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "tournament_round": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "tournament_game_number": {
                        "type": "integer",
                        "example": 1
                    },
                    "weather_conditions": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "temperature": {
                        "type": "integer",
                        "example": 1
                    },
                    "court_conditions": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "is_streamed": {
                        "type": "boolean",
                        "example": true
                    },
                    "stream_url": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "media_links": {
                        "type": "object",
                        "example": []
                    },
                    "pre_game_notes": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "post_game_notes": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "referee_report": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "incident_report": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "attendance": {
                        "type": "integer",
                        "example": 1
                    },
                    "capacity": {
                        "type": "integer",
                        "example": 1
                    },
                    "ticket_prices": {
                        "type": "object",
                        "example": []
                    },
                    "game_rules": {
                        "type": "object",
                        "example": []
                    },
                    "allow_spectators": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_media": {
                        "type": "boolean",
                        "example": true
                    },
                    "emergency_contacts": {
                        "type": "object",
                        "example": []
                    },
                    "medical_staff_present": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "allow_recording": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_photos": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_streaming": {
                        "type": "boolean",
                        "example": true
                    },
                    "stats_verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "stats_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "stats_verified_by": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp",
                        "example": "2024-08-12T15:45:00Z"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Unique identifier",
                        "example": 1
                    }
                },
                "required": []
            },
            "GameRequest": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "home_team_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "away_team_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "scheduled_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "actual_start_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "actual_end_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "venue": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "venue_address": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "type": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "season": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "league": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "division": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "status": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "home_team_score": {
                        "type": "integer",
                        "example": 1
                    },
                    "away_team_score": {
                        "type": "integer",
                        "example": 1
                    },
                    "period_scores": {
                        "type": "object",
                        "example": []
                    },
                    "current_period": {
                        "type": "integer",
                        "example": 1
                    },
                    "total_periods": {
                        "type": "integer",
                        "example": 1
                    },
                    "period_length_minutes": {
                        "type": "integer",
                        "example": 1
                    },
                    "time_remaining_seconds": {
                        "type": "integer",
                        "example": 1
                    },
                    "clock_running": {
                        "type": "boolean",
                        "example": true
                    },
                    "overtime_periods": {
                        "type": "integer",
                        "example": 1
                    },
                    "overtime_length_minutes": {
                        "type": "integer",
                        "example": 1
                    },
                    "referees": {
                        "type": "object",
                        "example": []
                    },
                    "scorekeepers": {
                        "type": "object",
                        "example": []
                    },
                    "timekeepers": {
                        "type": "object",
                        "example": []
                    },
                    "team_stats": {
                        "type": "object",
                        "example": []
                    },
                    "player_stats": {
                        "type": "object",
                        "example": []
                    },
                    "live_commentary": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "play_by_play": {
                        "type": "object",
                        "example": []
                    },
                    "substitutions": {
                        "type": "object",
                        "example": []
                    },
                    "timeouts": {
                        "type": "object",
                        "example": []
                    },
                    "team_fouls": {
                        "type": "object",
                        "example": []
                    },
                    "technical_fouls": {
                        "type": "object",
                        "example": []
                    },
                    "ejections": {
                        "type": "object",
                        "example": []
                    },
                    "result": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "winning_team_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "point_differential": {
                        "type": "integer",
                        "example": 1
                    },
                    "tournament_id": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "tournament_round": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "tournament_game_number": {
                        "type": "integer",
                        "example": 1
                    },
                    "weather_conditions": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "temperature": {
                        "type": "integer",
                        "example": 1
                    },
                    "court_conditions": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "is_streamed": {
                        "type": "boolean",
                        "example": true
                    },
                    "stream_url": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "media_links": {
                        "type": "object",
                        "example": []
                    },
                    "pre_game_notes": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "post_game_notes": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "referee_report": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "incident_report": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "attendance": {
                        "type": "integer",
                        "example": 1
                    },
                    "capacity": {
                        "type": "integer",
                        "example": 1
                    },
                    "ticket_prices": {
                        "type": "object",
                        "example": []
                    },
                    "game_rules": {
                        "type": "object",
                        "example": []
                    },
                    "allow_spectators": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_media": {
                        "type": "boolean",
                        "example": true
                    },
                    "emergency_contacts": {
                        "type": "object",
                        "example": []
                    },
                    "medical_staff_present": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "allow_recording": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_photos": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_streaming": {
                        "type": "boolean",
                        "example": true
                    },
                    "stats_verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "stats_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "stats_verified_by": {
                        "type": "string",
                        "example": "Example value"
                    }
                },
                "required": []
            },
            "Club": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "name": {
                        "type": "string",
                        "example": "Los Angeles Lakers"
                    },
                    "short_name": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "slug": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "description": {
                        "type": "string",
                        "example": "Professional basketball team"
                    },
                    "logo_path": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "website": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1-555-123-4567"
                    },
                    "address_street": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "address_city": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "address_state": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "address_zip": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "address_country": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "primary_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "secondary_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "accent_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "settings": {
                        "type": "object",
                        "example": []
                    },
                    "preferences": {
                        "type": "object",
                        "example": []
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "founded_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "default_language": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "supported_languages": {
                        "type": "object",
                        "example": []
                    },
                    "league": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "division": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "season": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "facilities": {
                        "type": "object",
                        "example": []
                    },
                    "social_links": {
                        "type": "object",
                        "example": []
                    },
                    "membership_fee": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "currency": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "emergency_contact_name": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "emergency_contact_phone": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "emergency_contact_email": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "privacy_policy_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "terms_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "gdpr_compliant": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp",
                        "example": "2024-08-12T15:45:00Z"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Unique identifier",
                        "example": 1
                    }
                },
                "required": []
            },
            "ClubRequest": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "name": {
                        "type": "string",
                        "example": "Los Angeles Lakers"
                    },
                    "short_name": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "slug": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "description": {
                        "type": "string",
                        "example": "Professional basketball team"
                    },
                    "logo_path": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "website": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1-555-123-4567"
                    },
                    "address_street": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "address_city": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "address_state": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "address_zip": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "address_country": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "primary_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "secondary_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "accent_color": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "settings": {
                        "type": "object",
                        "example": []
                    },
                    "preferences": {
                        "type": "object",
                        "example": []
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "founded_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "default_language": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "supported_languages": {
                        "type": "object",
                        "example": []
                    },
                    "league": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "division": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "season": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "facilities": {
                        "type": "object",
                        "example": []
                    },
                    "social_links": {
                        "type": "object",
                        "example": []
                    },
                    "membership_fee": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "currency": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "emergency_contact_name": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "emergency_contact_phone": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "emergency_contact_email": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "privacy_policy_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "terms_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "gdpr_compliant": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": []
            },
            "User": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Los Angeles Lakers"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1-555-123-4567"
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "gender": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "bio": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "timezone": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "language": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "avatar_path": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "preferences": {
                        "type": "object",
                        "example": []
                    },
                    "notification_settings": {
                        "type": "object",
                        "example": []
                    },
                    "player_profile_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "coaching_certifications": {
                        "type": "object",
                        "example": []
                    },
                    "last_login_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "last_login_ip": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "subscription_tier": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "api_quota_reset_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "current_api_usage": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "api_key_hash": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "api_access_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "api_key_last_used_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "rate_limit_cache": {
                        "type": "object",
                        "example": []
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp",
                        "example": "2024-08-12T15:45:00Z"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Unique identifier",
                        "example": 1
                    }
                },
                "required": []
            },
            "UserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Los Angeles Lakers"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1-555-123-4567"
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "gender": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "bio": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "timezone": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "language": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "avatar_path": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "preferences": {
                        "type": "object",
                        "example": []
                    },
                    "notification_settings": {
                        "type": "object",
                        "example": []
                    },
                    "player_profile_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "coaching_certifications": {
                        "type": "object",
                        "example": []
                    },
                    "last_login_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "last_login_ip": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "subscription_tier": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "api_quota_reset_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "current_api_usage": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "api_key_hash": {
                        "type": "string",
                        "example": "Example value"
                    },
                    "api_access_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "api_key_last_used_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-12T10:30:00Z"
                    },
                    "rate_limit_cache": {
                        "type": "object",
                        "example": []
                    }
                },
                "required": []
            },
            "PaginationLinks": {
                "type": "object",
                "properties": {
                    "first": {
                        "type": "string",
                        "nullable": true
                    },
                    "last": {
                        "type": "string",
                        "nullable": true
                    },
                    "prev": {
                        "type": "string",
                        "nullable": true
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PaginationMeta": {
                "type": "object",
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer",
                        "nullable": true
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "to": {
                        "type": "integer",
                        "nullable": true
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object"
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Laravel Sanctum Bearer Token"
            },
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API Key for external integrations"
            }
        },
        "responses": {
            "BadRequest": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthenticated"
                                }
                            }
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "This action is unauthorized"
                                }
                            }
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Resource not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Resource not found"
                                }
                            }
                        }
                    }
                }
            },
            "ValidationError": {
                "description": "Validation Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "errors": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Server Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "parameters": [],
        "examples": [],
        "requestBodies": [],
        "headers": [],
        "callbacks": [],
        "links": []
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and token management"
        },
        {
            "name": "Teams",
            "description": "Team management operations"
        },
        {
            "name": "Players",
            "description": "Player management and statistics"
        },
        {
            "name": "Games",
            "description": "Game management and live scoring"
        },
        {
            "name": "Tournaments",
            "description": "Tournament and bracket management"
        },
        {
            "name": "Training",
            "description": "Training sessions and drill management"
        },
        {
            "name": "Analytics",
            "description": "ML-powered analytics and predictions"
        },
        {
            "name": "Videos",
            "description": "Video analysis and annotations"
        },
        {
            "name": "Multi-tenant",
            "description": "Tenant management and subscription"
        },
        {
            "name": "Webhooks",
            "description": "Real-time event notifications"
        },
        {
            "name": "External APIs",
            "description": "Federation and third-party integrations"
        }
    ]
}